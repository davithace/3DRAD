<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">

<html>

<head>
   <title>
      EventOnContact, 3D Rad
   </title>

   <META
      content="EventOnContact,Timed,Timer,3D Rad"
      name="keywords">
</head>

<body bgcolor="#000000" text="#909080" link="#F0E0E0" vlink="#F0E0E0" alink="#F0E0E0">

<table border="0" cellpadding="0" cellspacing="0" width="760">

   <tr>
      <td width="760" colspan="6"><img src="./img/main_logo.jpg" width="760" height="182"></td>
   </tr>

   <tr>
      <td width="26" bgcolor="#00002F"></td>
      <td width="112" bgcolor="#00002F" valign="top">
         <br>
         <p>
            <a href="http://www.3drad.com/">
            <font color="#909080" size="1" face="Verdana">
               <strong>WHAT IS<br>3D RAD?<br>CLICK HERE<br>TO FIND OUT!</strong>
            </font>
            </a>
         </p>
         <br>
      </td>
      <td width="24" bgcolor="#00002F"></td>
      <td width="24"></td>
      <td width="400">
         <h1 align="center">
            <font size="4" face="Verdana">
               EventOnContact<br>
            </font>
         </h1>
         <font size="2" face="Verdana">
         <p>
            <center>
            <img src="./img/EventOnContact.jpg" width="128" height="128" align="center" border="0">
            </center>
            <br>
            This object starts/stops (or shows/hides) objects linked to it when a collision between two objects of a
            specified set is detected.
            <br><br>
            Typical usage includes emission of sounds on collisions, activation of pre-defined animations
            (for example an explosion), point assignments based on how/where an object is hit by a bullet and so on.
            <br><br>
            This object can itself be started and stopped by other event objects,
            allowing you to create <em>chains</em> and achieve articulated event management.
            <br><br>
            For more about event objects in general, please see <a href="http://www.3drad.com/event_objects.htm">this tutorial</a>.
            <br><br>

            <br>
            <center>
            <font size="3" face="Verdana">
               <strong>USAGE</strong>
            </font>
            </center>
            <br>

            Add the EventOnContact object to your project, link it to all the objects you want to
            monitor for collisions and also to all objects you want to start/stop when a contact
            is detected.
            <br><br>
            You link objects together in the Object List (left side of 3D Rad main screen), by
            selecting an object and then checking the other objects you want to link to it.
            <br><br>
            To configure the EventOnContact object, double-click it in the
            Object List to open the following property dialog:
            <br><br>
            <center>
            <img src="./img/EventOnContact_properties.jpg">
            </center>
            <br><br>
            <center><strong>Relationships</strong></center>
            <br>
            This list defines how the EventOnContact object relates to the objects that are linked to it. 
            The following relationship types are supported:
            <br><br>
            <li>IGNORE. Do nothing.
            Typically used for linked objects that are <em>starters</em> for this EventOnContact
            object itself (in a chain of event objects for example).</li>
            <br><br>
            <li>MONITOR. Check the object for collisions.</li>
            <br><br>
            <li>MONITOR (REFERENCE). Check the object for collisions. The object
            is also used as a reference when contact location bounds (or force
            bounds, or normal ranges) are used. Use simple MONITOR mode instead,
            if no bound/range option is used.</li>
            <br><br>
            <li>START ON CONTACT. Start the object when a contact between two monitored objects is detected.
            Note that the target object must provide some 'startable' action.</li>
            <br><br>
            <li>STOP ON CONTACT. Stop the object when a contact between two monitored objects is detected.</li>
            <br><br>
            <li>SWITCH ON CONTACT. Switch the object (start if stopped and vice-versa)
            when a contact between two monitored objects is detected.
            Note that, because the checking is performed 75 times per second, contacts may be reported several times, until
            the bodies are no longer in contact. This causes the target objects to be switched on/off repeatedly.</li>
            <br><br>
            <li>SHOW ON CONTACT. Show the object when a contact between two monitored objects is detected.</li>
            <br><br>
            <li>HIDE ON CONTACT. Hide the object when a contact between two monitored objects is detected.</li>
            <br><br>
            <li>S/H SWITCH ON CONTACT. Switch the object (show if hidden and vice-versa) when a contact between two monitored objects is detected.</li>
            <br><br>
            <li>RESET ON CONTACT. Re-initialize the object completely, to its default state, as defined in the project.</li>
            <br><br>
            <li>MONITOR (HIDE ON CONTACT). Check the object for collisions, hiding it as soon as a collision is detected for it.
            As soon as it is hidden, make the handle of this object available to other objects as an <em>internal parameter</em> (see below).</li>
            <br><br>
            <li>START ON NO-CONTACT (and similar). These settings perform the action when no contact is detected for a specified amount of of time.
            The time threshold is specified by using the <em>No-contact trigger threshold</em> input box (see below).
            Note that for SHOW/HIDE actions, the specified object is shown/hidden when the contact is not sensed, but it is hidden/shown when
            the contact is sensed.</li>
            <br><br>
            <center><strong>Ignore collisions that don't involve reference objects</strong></center>
            <br>
            If this option is checked, only collisions that involve objects marked as <em>MONITOR (REFERENCE)</em> objects will be considered.
            This feature allows you to use one single EventOnContact where you need collision detection for all objects but you want the action
            to be triggered only when certain objects in the set collide.
            <br><br>
            NOTE: this option is ignored if any of the 'Use contact...' options mentioned below is used.
            <br><br>
            <center><strong>Randomize target object</strong></center>
            <br>
            If this option is checked, the specified action
            is applied to one target object only, picked randomly.
            If the option is not checked, the action is applied to all target objects instead.
            <br><br>
            NOTE: this setting is ignored for 'no-contact' actions (see above).
            <br><br>
            <center><strong>Use contact location bounds</strong></center>
            <br>
            If enabled, the event action is only performed if the collision happened farther than the specified
            <em>minimum distance</em> and closer than the specified <em>maximum distance</em>
            (Radius min/max values), from the specified <em>Target center</em>.
            <br><br>
            The target center location is relative to the center of the colliding, reference object.
            If none of the two objects colliding is marked as <em>MONITOR (REFERENCE)</em>,
            the contact is not detected.
            <br><br>
            This feature is typically used to only perform event actions on collisions happening
            on specific parts of an object.
            <br><br>
            <center><strong>Use contact force bounds</strong></center>
            <br>
            If enabled, the event action is only performed if the intensity of the forces generated by the
            collision is within the specified range.
            <br><br>
            Note that intensity may vary greatly, depending on body masses and velocity.
            <br><br>
            If none of the two objects colliding is marked as <em>MONITOR (REFERENCE)</em>,
            the contact is not detected.
            <br><br>
            <center><strong>Use contact normal ranges</strong></center>
            <br>
            If enabled the event action is only performed if the X, Y, Z components of the surface normal vector,
            at contact location, are within the specified ranges.
            <br><br>
            The surface normal describes the orientation of the surface of the reference body, at contact location.
            It is a unitary vector perpendicular to the surface.
            Its orientation is relative to reference object's orientation.
            <br><br>
            This feature is useful to perform event actions on collisions happening on surfaces with a certain
            sloping only.
            <br><br>
            If none of the two objects colliding is marked as <em>MONITOR (REFERENCE)</em>,
            the contact is not detected.
            <br><br>

            <center><strong>No-contact trigger threshold</strong></center>
            <br>
            If any 'no-contact' action is specified in the relationship window (see above), it will be
            triggered only after all monitored objects remain detached (not in contact) for at least
            the time specified in this input box.
            <br><br>
            Setting this parameter to zero will completely disable the no-contact sensor, which is
            recommended if no 'no-contact' actions are set in the relationship window. The sensor
            always uses some processing power when the time threshold is non-zero.
            <br><br>

            <center><strong>Apply opposite action on no-contact</strong></center>
            <br>
            If this option is checked, the specified action
            is applied to the target when the contact is detected,
            and the opposite action is applied to the target when the contact is no longer detected.
            <br><br>
            Note that this feature only works for objects that are marked, in the <em>Relationships</em> window, as
            <em>... ON CONTACT</em> (see above), and only when the <em>No-contact trigger threshold</em> (see above) is non-zero.
            <br><br>
            Also note that, when this feature is enabled, only START/STOP/SHOW/HIDE actions are supported by the EventOnContact object.
            <br><br>

            <center><strong>Working at start</strong></center>
            <br>
            If this option is not checked, the EventOnContact object will not work
            until it is <em>started</em> by using another event object.
            <br><br>
            <center>For information about the remaining controls, please <a href="./AllObjects.htm">click here</a>.</center>
            <br><br>

            <br>
            <center><strong>INTERNAL PARAMETERS</strong></center>
            <br><br>
            The EventOnContact object has internal parameters you can access by using other objects like
            <a href="./EventOnValue.htm">EventOnValue</a> or <a href="./Script.htm">Script</a>.
            <br><br>
            <li>Contact force, read-only. If non zero, the value is the intensity of the force generated
            by the collision. Note that this parameter is non zero only when the conditions
            you have set for this event object are met (see above).</li>
            <br><br>
            <li>Hidden object. This is the OBJ_ handle of the monitored object that has just been hidden (see <em>Relationships</em> section, above).
            Please see <a href="./Script.htm">Script object's help file</a> for details on OBJ_ parameters.</li>
            <br><br>
            <li>Coll. Imposter Id. If at least one of the monitored object had any imposter, and the collision involved
            one of them, this paramter will be the Id of the imposter (0 for first imposter, 1 for second etc).
            Note that if both monitored objects have imposters and collision involves imposters of both objects, the result is undefined.</li>
            <br><br>
            NOTE: the EventOnContact object (which in 3d space is an invisible entity) is automatically moved
            to the exact location of the most recent contact. From a script this location can be captured by
            using the iObjectLocation() function.
            
         </p>
         </font>
      </td>
      <td width="174"></td>
   </tr>

   <tr>
      <td width="26" bgcolor="#00002F"></td>
      <td width="112" bgcolor="#00002F"></td>
      <td width="24" bgcolor="#00002F"></td>
      <td width="598" colspan="3"><img src="./img/main_logo_bottom.jpg" width="598" height="103"></td>
   </tr>

</table>

</body>

</html>
